# -*- coding: utf-8 -*-
"""Gender Voices Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gl2MbzJ9w3DatYOMGxpNIq3xSSlLZanD
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
train_df = pd.read_csv('gender-voice-train.csv')
test_df = pd.read_csv('gender-voice-test.csv')

train_df.head()

test_df.head()

print(train_df.shape)
print(test_df.shape)

# Missing values in the 'train_df' DataFrame.
num_missing_values = 0

for column in train_df.columns:
  for item in train_df[column].isnull():
    if item == True:
      num_missing_values += 1

num_missing_values

# Missing values in the 'test_df' DataFrame.
num_missing_values = 0

for column in test_df.columns:
  for item in test_df[column].isnull():
    if item == True:
      num_missing_values += 1

num_missing_values

# Count of the 'male' and 'female' classes in the 'train_df' DataFrame.
train_df['label'].value_counts()

# Count of the 'male' and 'female' classes in the 'test_df' DataFrame.
test_df['label'].value_counts()

# Feature variables from the 'train_df' DataFrame.
x_train = train_df.iloc[:, 1:]
x_train.head()

# Feature variables from the 'test_df' DataFrame.
x_test = test_df.iloc[:, 1:]
x_test.head()

# Target variable from the 'train_df' DataFrame.
y_train = train_df.iloc[:, 0]
y_train.head()

# Target variable from the 'test_df' DataFrame.
y_test = test_df.iloc[:, 0]
y_test.head()

# Random Forest Classifier model.
from sklearn.ensemble import RandomForestClassifier
rf= RandomForestClassifier(n_jobs=-1, n_estimators=50)
rf.fit(x_train, y_train)
# confusion_matrix and classification_report modules.
from sklearn.metrics import confusion_matrix, classification_report

# Predict the target variable based on the feature variables of the test DataFrame.
y_predicted = rf.predict(x_test)
y_predicted

# Confusion Matrix & Classification Report
print(confusion_matrix(y_test,y_predicted))
print()
print()
print(classification_report(y_test,y_predicted))